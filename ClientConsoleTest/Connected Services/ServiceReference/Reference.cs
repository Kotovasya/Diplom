//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientConsoleTest.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Request", Namespace="http://schemas.datacontract.org/2004/07/Server.Requests")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClientConsoleTest.ServiceReference.AuthorizationRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClientConsoleTest.ServiceReference.RegistrationRequest))]
    public partial class Request : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationRequest", Namespace="http://schemas.datacontract.org/2004/07/Server.Requests.Authorization")]
    [System.SerializableAttribute()]
    public partial class AuthorizationRequest : ClientConsoleTest.ServiceReference.Request {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationRequest", Namespace="http://schemas.datacontract.org/2004/07/Server.Requests.Authorization")]
    [System.SerializableAttribute()]
    public partial class RegistrationRequest : ClientConsoleTest.ServiceReference.Request {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationResponse", Namespace="http://schemas.datacontract.org/2004/07/Server.Responses.Authorization")]
    [System.SerializableAttribute()]
    public partial class RegistrationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientConsoleTest.ServiceReference.ResponseId ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientConsoleTest.ServiceReference.ResponseId Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseId", Namespace="http://schemas.datacontract.org/2004/07/Server.Responses.Authorization")]
    public enum ResponseId : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Succesfully = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadyRegister = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrongLogin = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrongPassword = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerException = 16,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationResponse", Namespace="http://schemas.datacontract.org/2004/07/Server.Responses.Authorization")]
    [System.SerializableAttribute()]
    public partial class AuthorizationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientConsoleTest.ServiceReference.ResponseId ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientConsoleTest.ServiceReference.ResponseId Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerEventArgs", Namespace="http://schemas.datacontract.org/2004/07/Server.Events")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClientConsoleTest.ServiceReference.UserLoginedEventArgs))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClientConsoleTest.ServiceReference.UserRegisteredEventArgs))]
    public partial class ServerEventArgs : System.EventArgs, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLoginedEventArgs", Namespace="http://schemas.datacontract.org/2004/07/Server.Events.Authorization")]
    [System.SerializableAttribute()]
    public partial class UserLoginedEventArgs : ClientConsoleTest.ServiceReference.ServerEventArgs {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRegisteredEventArgs", Namespace="http://schemas.datacontract.org/2004/07/Server.Events.Authorization")]
    [System.SerializableAttribute()]
    public partial class UserRegisteredEventArgs : ClientConsoleTest.ServiceReference.ServerEventArgs {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IAuthorizationService", CallbackContract=typeof(ClientConsoleTest.ServiceReference.IAuthorizationServiceCallback))]
    public interface IAuthorizationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/Registration", ReplyAction="http://tempuri.org/IAuthorizationService/RegistrationResponse")]
        ClientConsoleTest.ServiceReference.RegistrationResponse Registration(ClientConsoleTest.ServiceReference.RegistrationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/Registration", ReplyAction="http://tempuri.org/IAuthorizationService/RegistrationResponse")]
        System.Threading.Tasks.Task<ClientConsoleTest.ServiceReference.RegistrationResponse> RegistrationAsync(ClientConsoleTest.ServiceReference.RegistrationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/Authorization", ReplyAction="http://tempuri.org/IAuthorizationService/AuthorizationResponse")]
        ClientConsoleTest.ServiceReference.AuthorizationResponse Authorization(ClientConsoleTest.ServiceReference.AuthorizationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/Authorization", ReplyAction="http://tempuri.org/IAuthorizationService/AuthorizationResponse")]
        System.Threading.Tasks.Task<ClientConsoleTest.ServiceReference.AuthorizationResponse> AuthorizationAsync(ClientConsoleTest.ServiceReference.AuthorizationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/Connect", ReplyAction="http://tempuri.org/IAuthorizationService/ConnectResponse")]
        System.Guid Connect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/Connect", ReplyAction="http://tempuri.org/IAuthorizationService/ConnectResponse")]
        System.Threading.Tasks.Task<System.Guid> ConnectAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthorizationServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/OnUserRegistered", ReplyAction="http://tempuri.org/IAuthorizationService/OnUserRegisteredResponse")]
        void OnUserRegistered(ClientConsoleTest.ServiceReference.UserRegisteredEventArgs args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/OnUserLogined", ReplyAction="http://tempuri.org/IAuthorizationService/OnUserLoginedResponse")]
        void OnUserLogined(ClientConsoleTest.ServiceReference.UserLoginedEventArgs args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/BlaBlac", ReplyAction="http://tempuri.org/IAuthorizationService/BlaBlacResponse")]
        void BlaBlac();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthorizationServiceChannel : ClientConsoleTest.ServiceReference.IAuthorizationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizationServiceClient : System.ServiceModel.DuplexClientBase<ClientConsoleTest.ServiceReference.IAuthorizationService>, ClientConsoleTest.ServiceReference.IAuthorizationService {
        
        public AuthorizationServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AuthorizationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AuthorizationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizationServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public ClientConsoleTest.ServiceReference.RegistrationResponse Registration(ClientConsoleTest.ServiceReference.RegistrationRequest request) {
            return base.Channel.Registration(request);
        }
        
        public System.Threading.Tasks.Task<ClientConsoleTest.ServiceReference.RegistrationResponse> RegistrationAsync(ClientConsoleTest.ServiceReference.RegistrationRequest request) {
            return base.Channel.RegistrationAsync(request);
        }
        
        public ClientConsoleTest.ServiceReference.AuthorizationResponse Authorization(ClientConsoleTest.ServiceReference.AuthorizationRequest request) {
            return base.Channel.Authorization(request);
        }
        
        public System.Threading.Tasks.Task<ClientConsoleTest.ServiceReference.AuthorizationResponse> AuthorizationAsync(ClientConsoleTest.ServiceReference.AuthorizationRequest request) {
            return base.Channel.AuthorizationAsync(request);
        }
        
        public System.Guid Connect() {
            return base.Channel.Connect();
        }
        
        public System.Threading.Tasks.Task<System.Guid> ConnectAsync() {
            return base.Channel.ConnectAsync();
        }
    }
}
